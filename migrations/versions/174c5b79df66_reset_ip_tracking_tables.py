"""reset ip tracking tables

Revision ID: 174c5b79df66
Revises: c9e68b7c10bd
Create Date: 2025-08-20 16:23:43.117836

"""
from alembic import op
import sqlalchemy as sa


# import custom types
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.dirname(__file__)))
try:
    from app.custom_types import EncryptedString, decrypt_encrypted_field
    # Make them available in the global namespace for the migration
    globals()['EncryptedString'] = EncryptedString
    globals()['decrypt_encrypted_field'] = decrypt_encrypted_field
except ImportError as e:
    # Fallback for migrations that don't need custom types
    print(f"Warning: Could not import custom types: {e}")
    class EncryptedString:
        pass
    globals()['EncryptedString'] = EncryptedString

# revision identifiers, used by Alembic.
revision = '174c5b79df66'
down_revision = 'c9e68b7c10bd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ip_demographics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ip_address', EncryptedString(), nullable=False),
    sa.Column('country', EncryptedString(), nullable=True),
    sa.Column('country_code', EncryptedString(), nullable=True),
    sa.Column('continent_code', EncryptedString(), nullable=True),
    sa.Column('continent', EncryptedString(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_ip_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ip_address', EncryptedString(), nullable=False),
    sa.Column('user_agent', EncryptedString(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('current_ip')
        batch_op.drop_column('current_country')
        batch_op.drop_column('ip_last_updated')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ip_last_updated', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('current_country', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('current_ip', sa.TEXT(), nullable=True))

    op.drop_table('user_ip_log')
    op.drop_table('ip_demographics')
    # ### end Alembic commands ###
